---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: frontends.cloud.redhat.com
spec:
  group: cloud.redhat.com
  names:
    kind: Frontend
    listKind: FrontendList
    plural: frontends
    shortNames:
    - fe
    singular: frontend
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.deployments.readyDeployments
      name: Ready
      type: integer
    - jsonPath: .status.deployments.managedDeployments
      name: Managed
      type: integer
    - jsonPath: .spec.envName
      name: EnvName
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Frontend is the Schema for the frontends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FrontendSpec defines the desired state of Frontend
            properties:
              API:
                properties:
                  versions:
                    items:
                      type: string
                    type: array
                required:
                - versions
                type: object
              akamaiCacheBustDisable:
                description: Akamai cache bust opt-out
                type: boolean
              akamaiCacheBustPaths:
                description: Files to cache bust
                items:
                  type: string
                type: array
              assetsPrefix:
                type: string
              deploymentRepo:
                type: string
              disabled:
                type: boolean
              envName:
                type: string
              frontend:
                properties:
                  paths:
                    items:
                      type: string
                    type: array
                required:
                - paths
                type: object
              image:
                type: string
              module:
                properties:
                  analytics:
                    properties:
                      APIKey:
                        type: string
                    required:
                    - APIKey
                    type: object
                  config:
                    properties:
                      ssoScopes:
                        items:
                          type: string
                        type: array
                    type: object
                  defaultDocumentTitle:
                    type: string
                  manifestLocation:
                    type: string
                  modules:
                    items:
                      properties:
                        id:
                          type: string
                        module:
                          type: string
                        routes:
                          items:
                            properties:
                              exact:
                                type: boolean
                              pathname:
                                type: string
                              props:
                                x-kubernetes-preserve-unknown-fields: true
                            required:
                            - pathname
                            type: object
                          type: array
                      required:
                      - id
                      - module
                      - routes
                      type: object
                    type: array
                required:
                - manifestLocation
                - modules
                type: object
              navItems:
                items:
                  properties:
                    appId:
                      type: string
                    dynamicNav:
                      type: string
                    expandable:
                      type: boolean
                    filterable:
                      type: boolean
                    groupId:
                      type: string
                    href:
                      type: string
                    icon:
                      type: string
                    isExternal:
                      type: boolean
                    navItems:
                      items:
                        properties:
                          appId:
                            type: string
                          expandable:
                            type: boolean
                          filterable:
                            type: boolean
                          groupId:
                            type: string
                          href:
                            type: string
                          isExternal:
                            type: boolean
                          notifier:
                            type: string
                          permissions:
                            items:
                              properties:
                                args:
                                  items:
                                    type: string
                                  type: array
                                method:
                                  type: string
                              required:
                              - method
                              type: object
                            type: array
                          product:
                            type: string
                          routes:
                            items:
                              description: EmbeddedRoutes allow deeply nested navs
                                to have support for routes
                              properties:
                                appId:
                                  type: string
                                href:
                                  type: string
                                product:
                                  type: string
                                title:
                                  type: string
                              type: object
                            type: array
                          title:
                            type: string
                        required:
                        - title
                        type: object
                      type: array
                    permissions:
                      items:
                        properties:
                          args:
                            items:
                              type: string
                            type: array
                          method:
                            type: string
                        required:
                        - method
                        type: object
                      type: array
                    product:
                      type: string
                    routes:
                      items:
                        description: EmbeddedRoutes allow deeply nested navs to have
                          support for routes
                        properties:
                          appId:
                            type: string
                          href:
                            type: string
                          product:
                            type: string
                          title:
                            type: string
                        type: object
                      type: array
                    title:
                      type: string
                  required:
                  - title
                  type: object
                type: array
              service:
                type: string
              serviceMonitor:
                properties:
                  disabled:
                    type: boolean
                type: object
              title:
                type: string
            required:
            - API
            - deploymentRepo
            - envName
            - frontend
            - title
            type: object
          status:
            description: FrontendStatus defines the observed state of Frontend
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deployments:
                properties:
                  managedDeployments:
                    format: int32
                    type: integer
                  readyDeployments:
                    format: int32
                    type: integer
                required:
                - managedDeployments
                - readyDeployments
                type: object
              ready:
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
